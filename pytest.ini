[tool:pytest]
# Pytest configuration for EV Charging Optimization system
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test discovery
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --durations=10

# Markers for different test categories
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    performance: Performance and benchmark tests
    security: Security and privacy tests
    slow: Slow tests that take more than 30 seconds
    gpu: Tests that require GPU
    blockchain: Tests that require blockchain connectivity
    federated: Tests for federated learning functionality

# Minimum version requirements
minversion = 6.0

# Test output
console_output_style = progress
junit_family = xunit2

# Coverage configuration  
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*
    setup.py
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

precision = 2
show_missing = true

[coverage:html]
directory = test_results/coverage_html

[coverage:xml]
output = test_results/coverage.xml